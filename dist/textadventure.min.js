var Player=function(){var t="",o={};return{init:function(e){console.log("Initializing the player object"),o=e},getLocation:function(){return t},setLocation:function(e){t=e},getInventory:function(){return o},setInventory:function(e){o=e},addItemToInventory:function(e,t){o[e]=t},getItemFromInventory:function(e){for(var t in o)if(t===e||o[t].name===e)return o[t]},getItemIDFromInventory:function(e){for(var t in o)if(o[t].name===e)return t},deleteItemFromInventory:function(e){delete o[e]},inInventory:function(e){for(var t in o)if(t===e||o[t].name===e)return!0;return!1}}}(),TextAdventure=function(){var locations={},newGameLocations={},newStartingInventory={},victoryConditions={},options,playerObject,extensions,usedObjects=[],promptMode=!1,currentPrompt=[],gameVictory=!1,container,containername,outputContainer,inputField,tutorialMessages=[],tutorialMessageCount=0,firstMessageDisplayed=!1,timer,timerInterval=10,typedCommands=[],typedCommandsIndex=0,storage,canStore=!1;function init(e,t,o,n,i){newGameLocations=o,newStartingInventory=i,void 0!==(options=t).height&&"number"!=typeof options.height&&(options.height=void 0),debug("***** LOADING GAME *****"),debug("Initializing text adventure"),containername=e,container=document.getElementById(e);try{storage=window.localStorage;var r="__storage_test__";storage.setItem(r,r),storage.removeItem(r),canStore=!0,debug("Browser is localStorage capable"),Storage.prototype.setObject=function(e,t){this.setItem(e,JSON.stringify(t))},Storage.prototype.getObject=function(e){return JSON.parse(this.getItem(e))}}catch(e){canStore=!1}if(victoryConditions=n,tutorialMessages=void 0!==options.tutorial_messages?options.tutorial_messages:["To play, type an instruction or command followed by the RETURN key.","Have a look in your inventory to see what you are currently carrying.","If you are stuck, examine your current location or an object for hints.","Use the UP and DOWN arrow keys to view previously typed instructions."],tutorialMessageCount=0,firstMessageDisplayed=!1,prepareContainer(),playerObject=Object.create(Player),canStore&&null!==storage.getItem("TA_CURRENTLOCATION"))for(var s in debug("Local save found, resuming save."),printLine("... Resuming game from previous save","info"),locations=storage.getObject("TA_LOCATIONS"),playerObject.init(storage.getObject("TA_INVENTORY")),playerObject.setLocation(storage.getItem("TA_CURRENTLOCATION")),locations)for(var a in locations[s].objects)locations[s].objects[a].is_used&&usedObjects.push(a);else debug("No local save available, setting up new game"),locations=o,playerObject.init(i),playerObject.setLocation(locations.startlocation);checkForVictory(),gameVictory||(printLine(locations[playerObject.getLocation()].text_on_visit),locations[playerObject.getLocation()].visited=!0,currentPrompt=[],checkForPrompt("locations."+playerObject.getLocation()+".prompts"))}function prepareContainer(){debug("Preparing container with game elements"),container.innerHTML="",(outputContainer=document.createElement("div")).className="dal-ta-output",container.appendChild(outputContainer);var e=document.createElement("div");e.className="dal-ta-input",(inputField=document.createElement("input")).type="text",inputField.name="dal-ta-inputfield",inputField.placeholder=tutorialMessages[tutorialMessageCount],inputField.autofocus=!0,inputField.focus(),inputField.addEventListener("keypress",function(e){13===e.keyCode&&(TextAdventure.parseCommand(this.value),inputField.value="")},!0),inputField.addEventListener("keydown",function(e){38===e.keyCode&&TextAdventure.showTypedCommand(-1),40===e.keyCode&&TextAdventure.showTypedCommand(1)},!0),e.appendChild(inputField),container.appendChild(e),void 0!==options.height&&(container.style.height=options.height+"px",outputContainer.style.height=options.height-e.clientHeight+"px"),printLine("<h2>"+options.title+"</h2>","title"),printLine(options.description,"description"),options.show_help&&displayHelp()}function parseCommand(command){var actionTaken=!1;if(debug("***** COMMAND *****"),debug("Received command : "+command),command=command.toLowerCase().trim(),promptMode){debug("Game in prompt mode."),debug("Checking input against valid prompt responses.");var responseObj={},validResponseFound=!1,nextPromptToCheck="",promptObj=eval(getCurrentPrompt()[0]+"."+getCurrentPrompt()[1]);for(var response in promptObj.responses)if(!actionTaken){debug("Checking response: "+response),responseObj=promptObj.responses[response];for(var found=!1,i=0;!found&&i<responseObj.valid_commands.length;)command===responseObj.valid_commands[i]&&(found=!0),i++;found&&(debug("Proper response found"),printLine(responseObj.response_text),actionTaken=!0,promptMode=!1,trigger(responseObj,"response_trigger"),eval(getCurrentPrompt()[0]+"."+getCurrentPrompt()[1]).has_prompted=!0,eval(getCurrentPrompt()[0]+"."+getCurrentPrompt()[1]).responses[response].is_chosen=!0,void 0!==responseObj.receive_object&&""!==responseObj.receive_object&&(debug("Receiving object "+responseObj.receive_object),playerObject.addItemToInventory(responseObj.receive_object,locations[playerObject.getLocation()].objects[responseObj.receive_object]),printLine(locations[playerObject.getLocation()].objects[responseObj.receive_object].text_on_pickup)),void 0!==responseObj.goto_location&&""!==responseObj.goto_location?(resetPrompts(),nextPromptToCheck="",moveToLocation(responseObj.goto_location)):(nextPromptToCheck=getCurrentPrompt()[0]+"."+getCurrentPrompt()[1]+".responses."+response+".prompts",checkForPrompt(nextPromptToCheck),prepareNextTurn(command,actionTaken)))}actionTaken||printLine("This wasn't a valid response.","error")}else{var matchLength=0;if("help"===command)displayHelp();else if("inventory"===command)displayInventory();else if("look around"===command)printLine(locations[playerObject.getLocation()].description);else if(-1!==command.search(/^(pick up|take|grab)\s/)){matchLength=command.match(/^(pick up|take|grab)\s/)[0].length;var pickedupObject=command.substring(matchLength).replace("the ","");actionTaken=validatePickup(pickedupObject)}else if(-1!==command.search(/^(examine|look at)\s/)){matchLength=command.match(/^(examine|look at)\s/)[0].length;var examinedObject=command.substring(matchLength).replace("the ","");validateExamine(examinedObject)}else if(-1!==command.search(/^(go|move)\s/)){matchLength=command.match(/^((?:go|move)(?:\sto)?)\s/)[0].length;var direction=command.substring(matchLength).replace("the ","");actionTaken=validateMoveDirection(direction)}else if(-1!==command.search(/^(use)\s/)){var test1=/^(?:use)\s(.*)(?:\son\s)(.*)/,test2=/^(?:use)\s(.*)/,results=[];-1!==command.search(test1)?(results=command.match(test1),actionTaken=validateUse(results[1].replace("the ",""),results[2].replace("the ",""))):(results=command.match(test2),actionTaken=validateUse(results[1].replace("the ",""),""))}else printLine("That instruction wasn't understood.","error")}prepareNextTurn(command,actionTaken)}function prepareNextTurn(e,t){++tutorialMessageCount<tutorialMessages.length?inputField.placeholder=tutorialMessages[tutorialMessageCount]:inputField.placeholder="",typedCommands.push(e),typedCommandsIndex=typedCommands.length,t?(canStore&&(debug("Actionable turn, saving progress"),saveProgress()),debug("Actionable turn, checking for victory"),checkForVictory()):debug("Not an actionable turn, no need to save or check for victory")}function validateMoveDirection(e){debug("Testing direction "+e+" for validity");var t,o,n=!1;for(var i in locations[playerObject.getLocation()].directions)i===e?(n=!0,t=i,locations[playerObject.getLocation()].directions[i]):(o=locations[playerObject.getLocation()].directions[i].location,locations[o].name.toLowerCase()===e&&(n=!0,t=i,locations[playerObject.getLocation()].directions[i]));return n?resolvedDependency(t)?(moveToLocation(locations[playerObject.getLocation()].directions[t].location),!0):(debug("Access to this location is blocked"),printLine(locations[playerObject.getLocation()].directions[t].text_on_error,"error"),!1):(printLine("That is not a possible direction.","error"),!1)}function moveToLocation(e){debug("Moving to location "+e),playerObject.setLocation(e),printLine(locations[playerObject.getLocation()].text_on_visit),trigger(locations[playerObject.getLocation()],"visit_trigger"),locations[playerObject.getLocation()].visited=!0,checkForPrompt("locations."+playerObject.getLocation()+".prompts")}function validateUse(e,t){debug("Testing objects for valid use: "+e+", "+t);var o,n,i,r,s=isObjectAvailable(e);if(!1===s)return printLine("There's no "+e+" to use","error"),!1;if(n=s[0],o=s[1],""===t)return o.can_use?resolvedDependency(e)?(printLine(o.text_on_use),locations[playerObject.getLocation()].objects[n].is_used=!0,o.remove_after_use&&playerObject.deleteItemFromInventory(n),usedObjects.push(n),trigger(o,"use_trigger"),!0):(printLine(o.text_on_error),!1):(!1!==o.can_use_on_object?(debug(e+" can not be used by itself"),printLine("The "+e+" can't be used that way.","error")):(debug(e+"can not be used at all"),printLine("The "+e+" can't be used.","error")),!1);var a=isObjectAvailable(t);if(!1!==a)return r=a[0],i=a[1],o.can_use_on_object===r?resolvedDependency(e)&&resolvedDependency(t)?(debug(e+" and "+t+"can be used together."),printLine(o.text_on_use_object_on),locations[playerObject.getLocation()].objects[r].is_used=!0,o.remove_after_use&&playerObject.deleteItemFromInventory(n),usedObjects.push(n),trigger(o,"use_trigger"),!0):(resolvedDependency(n)?resolvedDependency(r)||(debug(t+" has an unresolved dependency"),printLine(i.text_on_error)):(debug(e+" has an unresolved dependency"),printLine(o.text_on_error)),!1):(debug(e+" can not be used on "+t),printLine("Can't use the "+e+" that way.","error"),!1);printLine(t+" isn't here to use","error")}function validateExamine(e){debug("Testing "+e+" for examine");var t=isObjectAvailable(e);!1!==t?(printLine(t[1].description),trigger(t,"examine_trigger")):printLine(e+" is not something you can examine.","error")}function validatePickup(e){debug("Testing object "+e+" for picking up.");var t=isObjectAvailable(e);if(!1!==t){var o=t[0],n=t[1];return n.can_pickup?n.picked_up?(printLine("You have already picked up the "+e,"error"),!1):resolvedDependency(o)?(playerObject.addItemToInventory(o,n),locations[playerObject.getLocation()].objects[o].picked_up=!0,printLine("You put the "+n.name+" in your inventory"),trigger(n,"pickup_trigger"),!0):(printLine(n.text_on_error),!1):(printLine("You can't pick up the "+e,"error"),!1)}printLine(e+" can not be picked up.","error")}function checkForVictory(){var objId="";if(debug("***** VICTORY CONDITIONS CHECK *****"),""!==victoryConditions.conditions.in_location&&victoryConditions.conditions.in_location!==playerObject.getLocation())return debug("Victory conditions not met: in location "+victoryConditions.conditions.in_location),!1;for(var i=0;i<victoryConditions.conditions.have_objects.length;i++)if(objId=victoryConditions.conditions.have_objects[i],!playerObject.inInventory(objId))return debug("Victory conditions not met: have object "+objId),!1;var foundObj=!1;for(i=0;i<victoryConditions.conditions.used_objects.length;i++){objId=victoryConditions.conditions.used_objects[i];for(var j=0;j<usedObjects.length;j++)objId===usedObjects[j]&&(foundObj=!0);if(!foundObj)return debug("Victory conditions not met: used object "+objId),!1}var loc="",locVisited=!1;for(i=0;i<victoryConditions.conditions.visited_locations.length;i++){if(loc=victoryConditions.conditions.visited_locations[i],void 0===locations[loc].visited)return debug("Victory conditions not me: location "+loc+" not visited"),!1;if(!0!==locations[loc].visited)return debug("Victory conditions not me: location "+loc+" not visited"),!1}var promptConditionsMet=!0;if(0<victoryConditions.conditions.has_responded.length){var responseIDs=[],responseString="",responseObj={};for(i=0;i<victoryConditions.conditions.has_responded.length;i++){responseIDs=victoryConditions.conditions.has_responded[i].split("."),responseString="locations."+responseIDs[0];for(var j=1;j<responseIDs.length;j++)responseString+=j%2==1?".prompts."+responseIDs[j]:".responses."+responseIDs[j];if(responseObj=eval(responseString),void 0===responseObj)return debug("Condition "+victoryConditions.conditions.has_responded[i]+" could not be found. Verify your game data."),!1;if(void 0===responseObj.is_chosen)return debug("Condition "+victoryConditions.conditions.has_responded[i]+" not met"),!1;if(!1===responseObj.is_chosen)return debug("Condition "+victoryConditions.conditions.has_responded[i]+" not met"),!1}}printLine(victoryConditions.victory_text,"victory"),inputField.disabled=!0,gameVictory=!0,trigger(victoryConditions,"victory_trigger")}function checkForPrompt(promptRef){if(debug("***** PROMPTS *****"),void 0!==eval(promptRef)){var promptObj=eval(promptRef);for(var prompt in promptObj){var promptCheck="";if(0<getCurrentPrompt().length&&(promptCheck=getCurrentPrompt()[1]),prompt===promptCheck)debug(prompt+" has just been shown.");else{var conditionsMet=!0;if(void 0!==promptObj[prompt].prompt_conditions){debug(prompt+" has conditions. Checking if they are met.");for(var responseIDs=[],responseString="",responseObj={},i=0;i<promptObj[prompt].prompt_conditions.length;i++){responseIDs=promptObj[prompt].prompt_conditions[i].split("."),responseString="locations."+responseIDs[0];for(var j=1;j<responseIDs.length;j++)responseString+=j%2==1?".prompts."+responseIDs[j]:".responses."+responseIDs[j];responseObj=eval(responseString),void 0===responseObj?(debug("Condition "+promptObj[prompt].prompt_conditions[i]+" could not be found. Verify your game data."),conditionsMet=!1):void 0!==responseObj.is_chosen?!1===responseObj.is_chosen&&(conditionsMet=!1,debug("Condition "+promptObj[prompt].prompt_conditions[i]+" not met")):(conditionsMet=!1,debug("Condition "+promptObj[prompt].prompt_conditions[i]+" not met"))}}if(!promptObj[prompt].has_prompted&&conditionsMet||promptObj[prompt].has_prompted&&promptObj[prompt].can_repeat&&conditionsMet)return debug("Showable prompt found: "+prompt),promptMode=!0,currentPrompt.push([promptRef,prompt]),printLine(promptObj[prompt].prompt_text,"prompt"),!0;debug("Prompt "+prompt+" can't be shown")}}return!1}for(debug("No pompt found"),debug("Checking for for follow-up prompts");0<currentPrompt.length;)return!!checkForPrompt(getCurrentPrompt()[0])||(removeLastPrompt(),!1)}function getCurrentPrompt(){return 0===currentPrompt.length?[]:currentPrompt[currentPrompt.length-1]}function removeLastPrompt(){currentPrompt.pop()}function resetPrompts(){currentPrompt=[]}function isObjectAvailable(e){var t="";if(playerObject.inInventory(e))return debug(e+" found in inventory."),[t=playerObject.getItemIDFromInventory(e),playerObject.getItemFromInventory(t)];for(t in locations[playerObject.getLocation()].objects)if(t===e||locations[playerObject.getLocation()].objects[t].name.toLowerCase()===e)return debug(e+" found in location."),[t,locations[playerObject.getLocation()].objects[t]];return debug(e+" not found."),!1}function findObjectInLocation(e){for(var t in locations[playerObject.getLocation()].objects)if(locations[l].objects[t].name===e)return t;return!1}function resolvedDependency(e){var t;debug("**** DEPENDENCY TEST ****"),debug("Testing "+e+" for dependencies.");var o=isObjectAvailable(e);return!1!==o?(objID=o[0],""!==(t=o[1]).depends_on?locations[playerObject.getLocation()].objects[t.depends_on].is_used?(debug("Has dependency, is resolved."),!0):(debug("Has dependency, is not resolved."),!1):(debug("Hasn't got a dependency."),!0)):""!==locations[playerObject.getLocation()].directions[e].depends_on?(oD=locations[playerObject.getLocation()].objects[locations[playerObject.getLocation()].directions[e].depends_on],oD.is_used?(debug("Has dependency, is resolved."),!0):(debug("Has dependency, is not resolved."),!1)):(debug("Hasn't got a dependency."),!0)}function saveProgress(){canStore&&(storage.setObject("TA_LOCATIONS",locations),storage.setObject("TA_INVENTORY",playerObject.getInventory()),storage.setItem("TA_CURRENTLOCATION",playerObject.getLocation()))}function restart(){gameVictory=promptMode=!(usedObjects=[]),firstMessageDisplayed=!(currentPrompt=[]),typedCommands=[],typedCommandsIndex=0,canStore&&(storage.removeItem("TA_LOCATIONS"),storage.removeItem("TA_INVENTORY"),storage.removeItem("TA_CURRENTLOCATION")),delete player,player="",delete locations,locations="",init(containername,options,newGameLocations,victoryConditions,newStartingInventory)}function trigger(e,t){void 0!==e[t]&&(debug("Trigger "+t+" found"),void 0!==e[t].function_call&&""!==e[t].function_call&&extensions[e[t].function_call](e[t].function_parameters))}function displayHelp(){debug("Displaying help");var e="<p>Explore all locations, collect items and solve puzzles to beat the game. Here is a list of instructions you can use to get started:</p>";printLine(e+=buildDefinitionList({help:{description:"Displays this information"},inventory:{description:"Displays the items in your character's inventory"},"look around":{description:"Take a look at your current location."},go:{description:"Go in a specific direction (or to a specific location or object)"},"pick up":{description:"Pick up an object and put it in your inventory"},examine:{description:"Take a closer look at an object in your inventory or in your current location."},use:{description:"Use an object in your inventory or location (on a specific object)"}}),"help")}function displayInventory(){debug("Displaying the inventory");var e="<h2>Inventory</h2>";printLine(e+=buildDefinitionList(playerObject.getInventory()),"inventory")}function printLine(e,t){if(void 0!==e&&""!==e){var o=document.createElement("div");o.className="dal-ta-output-item",void 0!==t&&(o.className+=" "+t);for(var n=0,i=0,r="",s="",a="";-1!==e.indexOf("[",n);)i=e.indexOf("[",n),r+=e.substring(n,i),n=i+1,i=e.indexOf("]",n),s=e.substring(n,i),n=i+2,i=e.indexOf(")",n),a=e.substring(n,i),n=i+1,r+='<span class="'+a+'">'+s+"</span>";r+=e.substring(n,e.length),o.innerHTML=r,outputContainer.appendChild(o),firstMessageDisplayed||(firstMessageDisplayed=!0,o.style.paddingTop=outputContainer.clientHeight-o.clientHeight+"px"),window.clearInterval(timer),timer=window.setInterval(animateScroll,timerInterval)}}function animateScroll(){outputContainer.clientHeight>=outputContainer.scrollHeight-outputContainer.scrollTop?window.clearInterval(timer):outputContainer.scrollTop+=2}function getContainer(){return container}function getInputField(){return inputField}function showTypedCommand(e){0!==typedCommands.length&&((typedCommandsIndex+=e)<0&&(typedCommandsIndex=typedCommands.length-1),typedCommandsIndex>=typedCommands.length&&(typedCommandsIndex=0),debug("showing typed command, index: "+typedCommandsIndex),inputField.value=typedCommands[typedCommandsIndex])}function buildDefinitionList(e){var t="<dl>";for(var o in e)t+=void 0===e[o].name?"<dt>"+o+"</dt>":"<dt>"+e[o].name+"</dt>",t+="<dd>"+e[o].description+"</dd>";return t+="</dl>"}function addExtension(e){extensions=e}function debug(e){!0===options.debug&&console.log(e)}return{init:init,parseCommand:parseCommand,showTypedCommand:showTypedCommand,help:displayHelp,inventory:displayInventory,move:validateMoveDirection,use:validateUse,pickup:validatePickup,printLine:printLine,getContainer:getContainer,getInputField:getInputField,extend:addExtension,restart:restart}}();